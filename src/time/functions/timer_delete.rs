use crate::time::timer_t;
use std::ffi::c_int;

// rustdoc imports
#[allow(unused_imports)]
use crate::errno::{errno, EINVAL};

#[link(name = "rt")]
extern "C" {
    /// [`timer_delete`] deletes the timer whose ID is given in `timerid`. If the timer was armed
    /// at the time of this call, it is disarmed before being deleted. The treatment of any pending
    /// signal generated by the deleted timer is unspecified.
    ///
    /// # Return Value
    /// On success, [`timer_delete`] returns 0. On failure, -1 is returned, and [`errno`] is set to
    /// indicate the error.
    ///
    /// # Errors
    ///  * [`EINVAL`] - `timerid` is not a valid timer ID.
    pub fn timer_delete(timerid: timer_t) -> c_int;
}
